# Generated by Django 5.2.4 on 2025-08-17 09:12

import django.db.models.deletion
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0095_groupsitepermission"),
        ("wagtailimages", "0027_image_description"),
    ]

    operations = [
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Last update",
                        verbose_name="Last update",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date created",
                        verbose_name="Date created",
                    ),
                ),
                (
                    "headline",
                    models.CharField(
                        db_index=True, help_text="Article headline", max_length=256
                    ),
                ),
                (
                    "content",
                    wagtail.fields.StreamField(
                        [
                            ("quote", 0),
                            ("paragraph", 1),
                            ("video", 2),
                            ("image", 3),
                            ("document", 4),
                        ],
                        block_lookup={
                            0: (
                                "wagtail.blocks.BlockQuoteBlock",
                                (),
                                {"help_text": "Quote"},
                            ),
                            1: (
                                "wagtail.blocks.RichTextBlock",
                                (),
                                {"help_text": "Rich Text"},
                            ),
                            2: (
                                "wagtail.embeds.blocks.EmbedBlock",
                                (),
                                {"help_text": "Video"},
                            ),
                            3: (
                                "wagtail.images.blocks.ImageBlock",
                                [],
                                {"help_text": "Image"},
                            ),
                            4: (
                                "wagtail.documents.blocks.DocumentChooserBlock",
                                (),
                                {"help_text": "Document"},
                            ),
                        },
                        help_text="Article content",
                    ),
                ),
                (
                    "is_breaking",
                    models.BooleanField(
                        default=False,
                        help_text="Designates if the Article is in breaking news",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        help_text="Article image",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "recommendations",
                    models.ManyToManyField(
                        help_text="Similar articles", to="articles.article"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page", models.Model),
        ),
    ]
