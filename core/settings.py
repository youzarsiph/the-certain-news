"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import json
import os
from pathlib import Path

from django.utils.translation import gettext_lazy as _
from dotenv import load_dotenv

# Load .env vars
load_dotenv(override=True)


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG", False)

CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

ALLOWED_HOSTS = json.loads(os.environ.get("ALLOWED_HOSTS", "[]"))


# Application definition
INSTALLED_APPS = [
    # The Certain News
    "tcn",
    "tcn.apps.articles",
    "tcn.apps.categories",
    "tcn.apps.feeds",
    "tcn.apps.home",
    "tcn.apps.links",
    "tcn.apps.sitemaps",
    "tcn.apps.tags",
    "tcn.apps.users",
    "tcn.channels",
    "tcn.cms",
    "tcn.ui",
    # Blog
    "blog",
    "blog.apps.articles",
    "blog.apps.categories",
    "blog.apps.indexes",
    "blog.apps.tags",
    "blog.cms",
    "blog.ui",
    # Careers
    "careers",
    "careers.apps.categories",
    "careers.apps.indexes",
    "careers.apps.jobs",
    "careers.apps.tags",
    "careers.cms",
    "careers.ui",
    # Docs & Support
    "docs",
    "docs.apps.indexes",
    "docs.apps.pages",
    "docs.apps.sections",
    "docs.apps.tags",
    "docs.cms",
    "docs.ui",
    # Deps
    "django_countries",
    "django_extensions",
    "phonenumber_field",
    # API
    "rest_wind",
    "corsheaders",
    "djoser",
    "django_filters",
    "rest_framework",
    "rest_framework.authtoken",
    # CMS
    "wagtail_blocks",
    "wagtail_localize",
    "wagtail_localize.locales",
    "wagtail.contrib.search_promotions",
    "wagtail.contrib.forms",
    "wagtail.contrib.redirects",
    "wagtail.embeds",
    "wagtail.sites",
    "wagtail.users",
    "wagtail.snippets",
    "wagtail.documents",
    "wagtail.images",
    "wagtail.search",
    "wagtail.admin",
    "wagtail",
    "modelcluster",
    "taggit",
    # Live feed
    "daphne",
    "channels",
    # Default apps
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sitemaps",
    "django.contrib.sites",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.contrib.sites.middleware.CurrentSiteMiddleware",
    "wagtail.contrib.redirects.middleware.RedirectMiddleware",
]

ROOT_URLCONF = "core.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "django.template.context_processors.i18n",
            ],
        },
    },
]

WSGI_APPLICATION = "core.wsgi.application"
ASGI_APPLICATION = "core.asgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
DATABASES = {
    "default": {
        "ENGINE": os.environ.get("DB_BACKEND"),
        "NAME": os.environ.get("DB_NAME"),
        "USER": os.environ.get("DB_USER"),
        "PASSWORD": os.environ.get("DB_PASSWORD"),
        "HOST": os.environ.get("DB_HOST"),
        "PORT": os.environ.get("DB_PORT"),
    },
}


# Email
# https://docs.djangoproject.com/en/5.2/ref/settings/#std-setting-DEFAULT_FROM_EMAIL
DEFAULT_FROM_EMAIL = os.environ.get("DEFAULT_FROM_EMAIL")

# https://docs.djangoproject.com/en/5.2/ref/settings/#std-setting-SERVER_EMAIL
SERVER_EMAIL = os.environ.get("SERVER_EMAIL")


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/
LANGUAGE_CODE = os.environ.get("LANGUAGE_CODE", "en-us")

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

LOCALE_PATHS = json.loads(os.environ.get("LOCALE_PATHS", "[]"))

LANGUAGES = [
    ("ar", _("Arabic")),
    ("ar-sy", _("Syria")),
    ("ar-qa", _("Qatar")),
    ("en", _("English")),
    ("en-gb", _("United Kingdom")),
    ("en-us", _("United States of America")),
    ("es", _("Spanish")),
    ("es-es", _("Spain")),
    ("fr", _("French")),
    ("fr-fr", _("France")),
    ("tr", _("Turkish")),
    ("tr-tr", _("TÃ¼rkiye")),
]


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
STATIC_URL = os.environ.get("STATIC_URL", "static/")
STATIC_ROOT = os.environ.get("STATIC_ROOT", os.path.join(BASE_DIR, "static"))


# Media files (uploaded by users)
# https://docs.djangoproject.com/en/5.2/topics/security/#user-uploaded-content-security
MEDIA_URL = os.environ.get("MEDIA_URL", "media/")
MEDIA_ROOT = os.environ.get("MEDIA_ROOT", os.path.join(BASE_DIR, "media"))


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# Channels settings
CHANNEL_LAYERS = {"default": {"BACKEND": "channels.layers.InMemoryChannelLayer"}}


# Wagtail CMS settings
WAGTAIL_I18N_ENABLED = True
WAGTAIL_SITE_NAME = _("The Certain News")
WAGTAIL_CONTENT_LANGUAGES = LANGUAGES
WAGTAILADMIN_BASE_URL = os.environ.get("WAGTAILADMIN_BASE_URL")
WAGTAILDOCS_EXTENSIONS = [
    "csv",
    "docx",
    "key",
    "odt",
    "pdf",
    "pptx",
    "rtf",
    "txt",
    "xlsx",
    "zip",
]

# Wagtail Localize
WAGTAILLOCALIZE_MACHINE_TRANSLATOR = {
    "CLASS": "tcn.cms.translators.HuggingFaceTranslator"
}


# Customization settings
SITE_ID = 1
AUTH_USER_MODEL = "users.User"
DATA_UPLOAD_MAX_NUMBER_FIELDS = 10_000
HF_TRANSLATION_MODEL = os.environ.get("HF_TRANSLATION_MODEL", "openai/gpt-oss-20b")

REST_FRAMEWORK = {
    "DEFAULT_FILTER_BACKENDS": [
        "rest_framework.filters.SearchFilter",
        "rest_framework.filters.OrderingFilter",
        "django_filters.rest_framework.DjangoFilterBackend",
    ],
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.BasicAuthentication",
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework.authentication.TokenAuthentication",
    ],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
    "PAGE_SIZE": 25,
}
